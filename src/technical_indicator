function RSI(market::market) 
   position = length(market)
   if position < 15
      return "NA"
   else      
      data = market[position-14:position]
      wins = []
      losses = []
      for i in data
         if i.Close < i.Open
            push!(losses,i)
         elseif i.Close > i.Open
            push!(losses,i)
         end
      end
      winssum = sum(wins)/length(wins)
      lossessum = sum(losses)/length(losses)
      firstrs = winssums/lossessum
      RSI = 100-(100/firstrs)
      return RSI
   end
end
   

function MACD(ma26::Float64,ma12::Float64,ma9::Float64)
   macdline = ma12 - ma26
   signalline = ma9
   macdhistogram = macdline - signalline
   return macdhistogram
end   

function MA9(market::market)
   position = length(market)
   if position < 7
      return "NA"
   else
      ma9 = sum(market.data.Close[position-9]:position)/9
      return ma9
   end
end

function MA12(market::market)
   position = length(market)
   if position < 13
      return "NA"
   else
      ma12 = sum(market.data.Close[position-12]:position)/12
      return ma12
   end
end

function MA26(market::market)
   position = length(market)
   if position < 27
      return "NA"
   else
      ma26 = sum(market.data.Close[position-26]:position)/26
      return ma26
   end
end

function MA52(market::market)
   position = length(market)
   if position < 53
      return "NA"
   else
      ma52 = sum(market.data.Close[position-52]:position)/52
      return ma52
   end
end     
